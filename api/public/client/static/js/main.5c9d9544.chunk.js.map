{"version":3,"sources":["components/MapPage.js","components/MultiChannelAudioPlayer.js","components/PlacePage.js","components/BaseContainer.js","App.js","serviceWorker.js","index.js"],"names":["defaultPosition","lat","lng","DEFAULT_CIRCLE_OPTIONS","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","Map","withGoogleMap","props","position","userPosition","defaultZoom","mapExtraProps","center","options","streetViewControl","fullscreenControl","mapTypeControl","markers","places","map","p","index","react_default","a","createElement","Marker_default","key","lon","onClick","openPlace","circle","Circle_default","radius","GoogleMap_default","Object","assign","defaultCenter","PlaceEntry","PlaceLi","place","name","MapPage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","placeEntries","MapPage_PlaceEntry","MapContainer","visible","containerElement","style","height","mapElement","LocateButton","src","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","console","log","setState","alert","Component","styled","div","_templateObject","li","_templateObject2","img","_templateObject3","AudioContext","window","webkitAudioContext","audioContextCreatedAt","Date","now","AudioLoader","req","XMLHttpRequest","open","path","responseType","onload","status","onComplete","response","onprogress","oEvent","lengthComputable","percentComplete","loaded","total","onProgress","send","React","MultiChannelAudioPlayer","_React$Component2","tracks","channelsOn","activeTracks","controlStatus","playbackControlStatus","avgLoaded","playbackPosition","playbackStartedAt","handlePlay","bind","assertThisInitialized","handlePause","handleRewind","audioContext","audioBuffers","samples","gainNodes","createGain","panners","track","StereoPannerNode","pan","decoded","calculateLoadingStatus","loaders","MultiChannelAudioPlayer_AudioLoader","file","_unmounted","_ref","asyncToGenerator","regenerator_default","mark","_callee","arrayBuffer","wrap","_context","prev","next","test","userAgent","decodeAudioData","audioBuffer","then","stop","_x","apply","arguments","inherits","createClass","value","forEach","l","Number","avg","length","toFixed","allDecoded","d","updateLoadingStatus","updatePlaybackControlStatus","i","gain","start","offset","undefined","sampleSource","createBufferSource","buffer","connect","destination","_this3","resume","startTime","currentTime","updateSequenceStartedAt","playSample","sample","controlable","controls","PlacePage","loadingStatus","toggleTrack","axios","get","apiUrl","_id","params","$embed","JSON","stringify","data","audio1","url","audio2","audio3","trackButtons","PlacePageContainer","MultiChannelAudioPlayer_MultiChannelAudioPlayer","ExitButton","exitPlace","PlacePage_templateObject","PlacePage_templateObject2","BaseContainer","currentPlace","docs","components_MapPage","components_PlacePage","App","components_BaseContainer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c9d9544.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport withGoogleMap from 'react-google-maps/lib/withGoogleMap';\nimport GoogleMap from 'react-google-maps/lib/components/GoogleMap';\nimport Marker from 'react-google-maps/lib/components/Marker';\nimport Circle from 'react-google-maps/lib/components/Circle';\n\nimport styled from 'styled-components'\n\n/* Create map with withGoogleMap HOC */\n/* https://github.com/tomchentw/react-google-maps */\n\n/* Default configuration */\nconst DEFAULT_ZOOM = 15;\nconst defaultPosition = {\n  lat: 27.9878,\n  lng: 86.9250\n};\nconst DEFAULT_RADIUS = 250;\n/* Circle options */\n// https://developers.google.com/maps/documentation/javascript/3.exp/reference#CircleOptions\nconst DEFAULT_CIRCLE_OPTIONS = {\n  fillColor: 'gray',\n  fillOpacity: 0.25,\n  strokeColor: 'gray',\n  strokeOpacity: 1,\n  strokeWeight: 1.5\n};\n\nconst Map = withGoogleMap((props) => {\n  const {\n    position,\n    userPosition,\n    defaultZoom,\n    places\n  } = props;\n  const mapExtraProps = { \n    center: position,\n    options: {streetViewControl: false, fullscreenControl: false, mapTypeControl: false}\n  };\n\n  const markers = places.map((p, index)=>\n    <Marker\n      key={index}\n      position={{lat: p.lat, lng: p.lon}}\n      onClick={()=>{props.openPlace(p)}}\n    />\n  )\n\n  const circle = \n    <Circle\n      center={userPosition}\n      radius={DEFAULT_RADIUS}\n      options={DEFAULT_CIRCLE_OPTIONS}\n    />;\n  \n  return (\n    <GoogleMap\n      defaultZoom={defaultZoom}\n      defaultCenter={position}\n      {...mapExtraProps}\n    >\n      {markers}\n      {props.userPosition && circle}\n    </GoogleMap>\n  )\n});\n\n\nconst PlaceEntry = props => \n  <PlaceLi onClick={props.onClick}>\n    {props.place.name}\n  </PlaceLi>\n\nclass MapPage extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userPosition: null\n    }\n  }\n\n  render () {\n    const placeEntries = this.props.places ? this.props.places.map((p, index)=>\n      <PlaceEntry\n        key={index}\n        place={p}\n        onClick={()=>this.props.openPlace(p)}\n      />\n    ) : \"loading...\"\n\n    return <MapContainer visible={this.props.visible}>\n      \n      <Map\n        containerElement={ <div style={ {height: '100%'} } /> }\n        mapElement={ <div style={ {height: '400px'} } /> }\n        position={this.state.userPosition ? this.state.userPosition : defaultPosition}\n        userPosition={this.state.userPosition}\n        defaultZoom={DEFAULT_ZOOM}\n        places={this.props.places}\n        openPlace={this.props.openPlace}\n      />\n\n      <ul>{placeEntries}</ul>\n\n      <LocateButton src=\"/images/locate.png\" \n        onClick={()=>{\n          \n          // Try HTML5 geolocation\n          if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((position)=> {\n              var pos = {\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n              };\n\n              console.log(\"setting userPosition\");\n              this.setState({userPosition: pos})\n            }, ()=> {\n              alert(\"couldn't get location\");\n            });\n          } else {\n            alert(\"browser doesn't support location\");\n          }\n\n        }}\n      />\n\n    </MapContainer>\n  }\n}\n\nexport default MapPage;\n\nconst MapContainer = styled.div`\n  display: flex;\n  width: 100%; \n  box-sizing: border-box;\n  flex-direction: column;\n  position: fixed;\n  visibility: ${props => props.visible ? \"visible\" : \"hidden\"}\n`\n\nconst PlaceLi = styled.li`\n  :hover {cursor: pointer};\n`\n\nconst LocateButton = styled.img`\n  position: absolute;\n  width: 30px;\n  height: 30px;\n  right: 10px;\n  top: 220px;\n  padding: 5px;\n  box-shadow: 2px 2px #ddd;\n  border-radius: 2px;\n  background-color: white;\n  font-weight: bold;\n  :hover {cursor: pointer};\n`\n","import React from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\n\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nlet audioContextCreatedAt = Date.now()\n\nclass AudioLoader extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.req = new XMLHttpRequest();\n    this.req.open('GET', this.props.path, true);\n    this.req.responseType = 'arraybuffer';\n\n    this.req.onload = ()=> {\n       // Onload is triggered even on 404\n       // so we need to check the status code\n       if (this.req.status === 200) {\n          console.log(\"complete\");\n          this.props.onComplete(this.req.response);\n       }\n    }\n\n    this.req.onprogress = (oEvent)=> {\n      if (oEvent.lengthComputable) {\n        var percentComplete = oEvent.loaded / oEvent.total * 100;\n        this.props.onProgress(percentComplete);\n      } else {\n        // Unable to compute progress information since the total size is unknown\n      }\n    }\n    this.req.send();\n  }\n\n  componentWillUnmount() {\n    this.req.onload = null;\n    this.req.onprogress = null;\n  }\n\n\n  render() {\n    return null;\n  }\n}\n\nexport class MultiChannelAudioPlayer extends React.Component {\n\n  constructor(props) {\n\n    console.log(\"tracks\", props.tracks);\n\n    audioContextCreatedAt = Date.now()\n    super(props);\n    this.state = {\n      channelsOn: props.activeTracks ? props.activeTracks : props.tracks.map(()=>true),\n      controlStatus: props.playbackControlStatus,\n      avgLoaded: 0,\n      playbackPosition: 0,\n      playbackStartedAt: 0,\n    }\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handlePause = this.handlePause.bind(this);\n    this.handleRewind = this.handleRewind.bind(this);\n    \n    this.audioContext = new AudioContext();  \n    \n    this.audioBuffers = props.tracks.map(()=>null);      \n    this.samples = props.tracks.map(()=>null);      \n    this.gainNodes = props.tracks.map(()=>\n      {return this.audioContext.createGain();}\n    );          \n\n    this.panners = props.tracks.map((track, index)=>{\n      //const pannerOptions = { pan: -1 + (2 / this.props.tracks.length) * index };\n      const pannerOptions = { pan: 0 };\n      if (typeof StereoPannerNode !== 'undefined') {\n        return new StereoPannerNode(this.audioContext, pannerOptions);\n      }\n      return null;\n    });\n\n    this.loaded = props.tracks.map(()=>0);      \n    this.decoded = props.tracks.map(()=>false);      \n    this.calculateLoadingStatus = this.calculateLoadingStatus.bind(this);\n\n    this.loaders = this.props.tracks.map((track, index)=>\n      <AudioLoader\n          key={index}\n          path={track.file}\n          onProgress={(loaded)=>{\n            if(this._unmounted) return;\n            this.loaded[index] = loaded;\n            this.calculateLoadingStatus();\n          }}\n          onComplete={async (arrayBuffer)=>{\n\n            const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\n            if(isSafari) {\n              this.audioContext.decodeAudioData(arrayBuffer, (audioBuffer)=>{\n                if(this._unmounted) return;\n                console.log(\"decoded safari\");\n                this.audioBuffers[index] = audioBuffer;            \n                this.loaded[index] = 100;\n                this.decoded[index] = true;\n                this.calculateLoadingStatus();\n              });  \n            } else {\n              this.audioContext.decodeAudioData(arrayBuffer).then((audioBuffer)=>{\n                if(this._unmounted) return;\n                console.log(\"decoded\");\n                this.audioBuffers[index] = audioBuffer;            \n                this.loaded[index] = 100;\n                this.decoded[index] = true;\n                this.calculateLoadingStatus();\n              });\n            }\n            \n            \n          }}\n      />\n    );\n\n    console.log(\"loaders\", this.loaders);\n  }\n\n  componentDidMount() {\n    this._unmounted = false;\n  }\n\n  componentWillUnmount() {\n    this.handlePause()\n    this._unmounted = true;\n  } \n\n  calculateLoadingStatus() {\n    let total = 0;\n    this.loaded.forEach((l)=>total+=Number(l));\n    let avg = (total / this.loaded.length).toFixed(1);\n    this.setState({avgLoaded: avg});\n\n    let allDecoded = true;\n    this.decoded.forEach(d=>{\n      if(!d) allDecoded = false;\n    });\n\n    if(avg < 100) {\n      this.props.updateLoadingStatus(\"loading... \" + avg + \"%\");     \n    } else {\n      this.props.updateLoadingStatus(\"preparing...\");     \n    }\n    \n    if(avg == 100 && allDecoded) {\n      this.props.updatePlaybackControlStatus(\"ready\");  \n    }\n  }\n  \n  componentDidUpdate() {\n    if(this.state.controlStatus !== this.props.playbackControlStatus) {\n      this.setState({controlStatus: this.props.playbackControlStatus})\n      if(this.props.playbackControlStatus === \"playing\") {\n        this.handlePlay();\n      }\n      if(this.props.playbackControlStatus === \"ready\") {\n        this.handleRewind();\n      }\n      if(this.props.playbackControlStatus === \"paused\") {\n        this.handlePause();\n      }\n    }\n\n    if(this.props.activeTracks) {\n      for(let i = 0; i < this.props.activeTracks.length; i++) {\n        if(this.gainNodes[i]) {\n          this.gainNodes[i].gain.value = this.props.activeTracks[i] ? 1.0 : 0.0;\n        }\n      }\n    }\n  }\n\n  playSample(index, start, offset=0) {\n    \n    const sampleSource = this.audioContext.createBufferSource();\n    \n    // console.log(this.audioBuffers[index]);\n\n    sampleSource.buffer = this.audioBuffers[index];\n\n    if(this.panners[index]) {\n      sampleSource.connect(this.gainNodes[index]).connect(this.panners[index]).connect(this.audioContext.destination)  \n    } else {\n      sampleSource.connect(this.gainNodes[index]).connect(this.audioContext.destination)  \n    }\n\n    sampleSource.start(start, offset);\n\n    // console.log(sampleSource);\n    \n    this.samples[index] = sampleSource; // save for later stopping and manipulation\n  }\n\n  handlePlay() {\n    if(this.audioContext.state === 'suspended') {\n        this.audioContext.resume();\n    }\n    let startTime = this.audioContext.currentTime;\n    this.setState({\n      playbackPosition: this.state.playbackPosition,\n      playbackStartedAt: startTime - this.state.playbackPosition\n    });\n    console.log(\"starting to play at \" + startTime);\n    // console.log(\"playbackPosition \" + this.state.playbackPosition);\n    if(this.props.updateSequenceStartedAt)\n      this.props.updateSequenceStartedAt(audioContextCreatedAt + (startTime - this.state.playbackPosition)*1000);\n    \n    this.audioBuffers.forEach((buffer, index)=>{\n      this.playSample(index, startTime, this.state.playbackPosition); \n    })\n  }\n\n  handlePause() {\n    this.props.updatePlaybackControlStatus(\"paused\");  \n    this.samples.forEach((sample)=>{\n      if(sample) {\n        sample.stop();   \n      }\n    })\n    this.setState({playbackPosition: this.audioContext.currentTime - this.state.playbackStartedAt});\n  }\n\n  handleRewind() {\n    this.samples.forEach((sample)=>{\n      if(sample) {\n        sample.stop();   \n      }\n    })\n    this.setState({playbackPosition: 0});\n  }\n\n  render() {\n\n    const controlable = this.state.controlStatus != \"loading\";\n\n    return (\n      <div>\n        {this.loaders}\n        {this.props.controls && controlable && <button onClick={this.handlePlay}>Play</button>}\n        {this.props.controls && controlable && <button onClick={this.handlePause}>Pause</button>}\n        {this.props.controls && controlable && <button onClick={this.handleRewind}>Rewind</button>}\n        {this.props.controls && <span>loaded: {this.state.avgLoaded}%</span>}\n      </div>\n    );\n  }\n\n}","import React, { Component } from 'react';\nimport styled from 'styled-components'\n\nimport { MultiChannelAudioPlayer } from './MultiChannelAudioPlayer';\n\nimport axios from 'axios';\n\nimport { apiUrl } from '../helpers';\n\nclass PlacePage extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playbackControlStatus: \"loading\", // ready - playing - paused\n      activeTracks: [true, false, false],\n      loadingStatus: 0,\n      tracks: null\n    }\n \n    this.updatePlaybackControlStatus = this.updatePlaybackControlStatus.bind(this);\n    this.toggleTrack = this.toggleTrack.bind(this);\n  }\n\n  async componentDidMount() {\n    let response = await axios.get(apiUrl + \"/place/\"+this.props.place._id, {\n        params: {\n          $embed: JSON.stringify([\"audio1\", \"audio2\", \"audio3\"])\n        }\n      }  \n    );\n    console.log(response);\n    let tracks = [\n      {file: response.data.audio1.url}, \n      {file: response.data.audio2.url}, \n      {file: response.data.audio3.url}\n    ];\n    console.log(tracks);\n    this.setState({\n      place: response.data,\n      tracks: tracks\n    });\n  }\n\n  updatePlaybackControlStatus(playbackControlStatus) {\n    this.setState({playbackControlStatus})\n  }\n\n  toggleTrack(index) {\n    let activeTracks = [false, false, false];\n    activeTracks[index] = true;\n    this.setState({activeTracks});\n  }\n\n  render () {\n    const trackButtons = this.state.activeTracks.map((value, index)=>{\n      return <button onClick={()=>{this.toggleTrack(index)}}>\n        Channel {index + 1}: {value ? \"on\" : \"off\"}\n      </button>\n    });\n\n    return <div>\n      <PlacePageContainer>\n\n        <div>place page: {this.state.place ? this.state.place.name : \"loading...\"}</div>\n\n        {this.state.tracks && <MultiChannelAudioPlayer \n          playbackControlStatus={this.state.playbackControlStatus}\n          updatePlaybackControlStatus={this.updatePlaybackControlStatus}\n          updateLoadingStatus={(loadingStatus)=>this.setState({loadingStatus})}\n          tracks={this.state.tracks}\n          activeTracks={this.state.activeTracks}\n          controls\n        />}\n\n        {this.state.playbackControlStatus != \"loading\" && trackButtons}\n\n      </PlacePageContainer>\n      <ExitButton onClick={this.props.exitPlace}>❎ leave</ExitButton>\n\n    </div>\n  }\n}\n\nexport default PlacePage;\n\nconst ExitButton = styled.div`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  :hover {cursor: pointer};\n`\n\nconst PlacePageContainer = styled.div`\n  position: absolute;\n  box-sizing: border-box;\n  width: 100%;\n  padding: 20px;\n`","import React, { Component } from 'react';\n\nimport MapPage from './MapPage.js'\nimport PlacePage from './PlacePage.js'\n\nimport axios from 'axios';\n\nimport { apiUrl } from '../helpers'\n\nclass BaseContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      places: [],\n      currentPlace: null\n    }\n  }\n\n  async componentDidMount() {\n    let response = await axios.get(apiUrl + \"/place\");\n    this.setState({places: response.data.docs});\n  }\n\n  render() {\n    return (\n      <div>\n        <MapPage\n          visible={!this.state.currentPlace} \n          places={this.state.places}\n          openPlace={(p)=>{this.setState({currentPlace: p})}}\n        />\n        {this.state.currentPlace && \n          <PlacePage \n            place={this.state.currentPlace}\n            exitPlace={()=>{this.setState({currentPlace: null})}}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default BaseContainer;\n","import React from 'react';\nimport BaseContainer from './components/BaseContainer.js'\n\nconst App = () => <BaseContainer/>\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}