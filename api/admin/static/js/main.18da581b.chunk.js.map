{"version":3,"sources":["helpers/dataProvider.js","helpers/s3.js","helpers/ra-data-rest-hapi-fixed.js","components/GoogleMap.jsx","components/LocationInput.js","components/App.js","serviceWorker.js","index.js"],"names":["requestHandler","s3Upload","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","data","fileParts","fileName","fileType","response","returnData","signedRequest","url","options","uploadResponse","wrap","_context","prev","next","files","title","split","console","log","axios","post","sent","abrupt","headers","Content-Type","onUploadProgress","progressEvent","loaded","put","rawFile","stop","_x","apply","this","arguments","s3Delete","filename","dataProvider","apiUrl","httpClient","length","undefined","fetchUtils","fetchJson","getQueryForParams","params","_params$pagination","pagination","page","perPage","_params$sort","sort","field","order","filter","$sort","q","$term","assign","flattenObject","$limit","$page","cleanData","clean","id","createdAt","updatedAt","deletedAt","isDeleted","JSON","stringify","type","resource","UPDATE_MANY","Promise","all","ids","map","concat","method","body","then","responses","json","DELETE_MANY","_convertDataRequestTo","GET_LIST","query","GET_ONE","GET_MANY_REFERENCE","target","UPDATE","CREATE","DELETE","GET_MANY","_id","join","Error","convertDataRequestToHTTP","docs","d","total","items","convertHTTPResponse","restHapiProvider","file","_x2","_x3","Map","withGoogleMap","props","position","defaultZoom","handleMarkerDragEnd","onZoomChanged","radius","circleOptions","shouldRecenterMap","circle","react_default","createElement","Circle_default","center","mapExtraProps","GoogleMap_default","defaultCenter","Marker_default","draggable","onDragEnd","LocationPicker","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","defaultPosition","bind","assertThisInitialized","nextProps","setState","mouseEvent","onChange","lat","latLng","lng","_this$props","zoom","containerElement","mapElement","_this$state","components_GoogleMap","Component","defaultProps","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","LocationInput","_this2","FormDataConsumer","formData","dispatch","objectWithoutProperties","LocationInput_LocationPicker","style","height","record","lon","value","change","REDUX_FORM_NAME","NumberInput","source","label","TranslationForm","SimpleForm","TextInput","TranslationEdit","Edit","TranslationCreate","Create","PlaceList","List","Datagrid","rowClick","TextField","PlaceForm","LocationInput_LocationInput","ReferenceInput","reference","SelectInput","optionText","PlaceEdit","PlaceCreate","FileList","bulkActionButtons","FileToolbar","Toolbar","DeleteButton","undoable","FileEdit","toolbar","App_FileToolbar","FileCreate","FileInput","multiple","FileField","App","Admin","Resource","name","list","ListGuesser","edit","create","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18da581b.chunk.js","sourcesContent":["import { s3Upload, s3Delete } from \"./s3.js\";\n\nimport restHapiProvider from './ra-data-rest-hapi-fixed.js';\n\nconst extendDataProvider = requestHandler => async (type, resource, params) => {\n\n    console.log(type, resource, params);\n\n    if (type === 'CREATE' && resource === 'file') {\n      let url = await s3Upload(params.data);\n      if(url) {\n        return requestHandler(type, resource, {data: {\n          filename: params.data.files.title, \n          url: url\n        }});   \n      } else {\n        throw new Error(\"upload error\");\n      } \n    }\n\n    if (type === 'DELETE' && resource === 'file') {\n        let file = await requestHandler('GET_ONE', 'file', { id: params.id });\n        if(file && file.data) {\n          s3Delete(file.data);\n        }\n        console.log(\"now dispatching normal delete request to api\");\n    }\n\n    if (type === 'DELETE_MANY' && resource === 'file') {\n        throw new Error(\"not implemented\");\n    }\n\n    // for other request types and resources, fall back to the default request handler\n    return requestHandler(type, resource, params);\n};\n\nconst dataProvider = extendDataProvider(restHapiProvider('http://sebastians-mbp:9000'));\n\nexport { dataProvider }\n\n\n\n","import axios from 'axios';\n\nconst s3Upload = async (data) => {\n    // Split the filename to get the name and type\n    let fileParts = data.files.title.split('.');\n    let fileName = data.files.title;\n    let fileType = fileParts[1];\n    console.log(\"Preparing the upload\", fileName, fileType);\n    \n    let response = await axios.post(\"/s3_sign\", {\n      fileName : fileName,\n      fileType : fileType\n    })\n    if(!response) return null;\n\n    console.log(response);\n\n    var returnData = response.data.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n  \n    console.log(\"Recieved a signed request \" + signedRequest);\n    // Put the fileType in the headers for the upload\n    var options = {\n      headers: {\n        'Content-Type': fileType\n      },\n      onUploadProgress: progressEvent => {console.log(progressEvent.loaded);}\n    };\n  \n    let uploadResponse = await axios.put(signedRequest, data.files.rawFile, options)\n    console.log(\"Response from s3\", uploadResponse);\n\n    if(uploadResponse) {\n      return url;  \n    }\n}\n\nconst s3Delete = (data) => {\n  let fileName = data.filename;\n  axios.post(\"/s3_delete\", {\n      fileName : fileName\n  })\n}\n\nexport { s3Upload, s3Delete };","import { stringify } from 'query-string'\nimport {\n  fetchUtils,\n  GET_LIST,\n  GET_ONE,\n  GET_MANY,\n  GET_MANY_REFERENCE,\n  CREATE,\n  UPDATE,\n  UPDATE_MANY,\n  DELETE,\n  DELETE_MANY\n} from 'react-admin'\n\n/**\n * Maps admin-on-rest queries to a rest-hapi powered REST API\n *\n * @see https://github.com/JKHeadley/rest-hapi\n * @example\n * GET_LIST     => GET http://my.api.url/posts?$sort=title&$limit=24&$page=1\n * GET_ONE      => GET http://my.api.url/posts/123\n * GET_MANY     => GET http://my.api.url/posts/123, GET http://my.api.url/posts/456, GET http://my.api.url/posts/789\n * UPDATE       => PUT http://my.api.url/posts/123\n * CREATE       => POST http://my.api.url/posts/123\n * DELETE       => DELETE http://my.api.url/posts/123\n */\nexport default (apiUrl, httpClient = fetchUtils.fetchJson) => {\n  const getQueryForParams = (params) => {\n    const { page, perPage } = params.pagination\n    const { field, order } = params.sort\n    if (field) {\n      params.filter.$sort = (order === 'DESC' ? '-' : '') + field\n      /* A set of fields to sort by.\n      Including field name indicates it should be sorted ascending, while prepending '-' indicates descending.\n      The default sort direction is 'ascending' (lowest value to highest value).\n      Listing multiplefields prioritizes the sort starting with the first field listed */\n    }\n    if (params.filter.q != null) {\n      params.filter.$term = params.filter.q\n      delete params.filter.q\n    }\n    return Object.assign(\n      fetchUtils.flattenObject(params.filter), // add filter as is, e.g. name=john\n      {$limit: perPage, $page: page}, // pagination\n      /* Rest-Hapi docs:\n      A set of fields to sort by.\n      Including field name indicates it should be sorted ascending, while prepending '-' indicates descending.\n      The default sort direction is 'ascending' (lowest value to highest value).\n      Listing multiplefields prioritizes the sort starting with the first field listed */\n      field ? {$sort: (order === 'DESC' ? '-' : '') + (field === 'id' ? '_id' : field)} : {} // optional field sort\n    )\n  }\n\n  const cleanData = (params) => {\n    const clean = Object.assign({}, params.data)\n    delete clean.id\n    delete clean.createdAt\n    delete clean.updatedAt\n    delete clean.deletedAt\n    delete clean.isDeleted\n    return JSON.stringify(clean)\n  }\n\n  /**\n     * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n     * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n     * @param {Object} params The data request params, depending on the type\n     * @returns {Object} { url, options } The HTTP request parameters\n     */\n  const convertDataRequestToHTTP = (type, resource, params) => {\n    let url = ''\n    const options = {}\n    switch (type) {\n      case GET_LIST: {\n        const query = getQueryForParams(params)\n        url = `${apiUrl}/${resource}?${stringify(query)}`\n        break\n      }\n      case GET_ONE:\n        url = `${apiUrl}/${resource}/${params.id}`\n        break\n      case GET_MANY_REFERENCE: {\n        const query = getQueryForParams(params)\n        query[params.target] = params.id\n        url = `${apiUrl}/${resource}?${stringify(query)}`\n        break\n      }\n      case UPDATE:\n        url = `${apiUrl}/${resource}/${params.id}`\n        options.method = 'PUT'\n        options.body = cleanData(params)\n        break\n      case CREATE:\n        url = `${apiUrl}/${resource}`\n        options.method = 'POST'\n        options.body = cleanData(params)\n        break\n      case DELETE:\n        url = `${apiUrl}/${resource}/${params.id}`\n        options.method = 'DELETE'\n        break\n      case GET_MANY: {\n        url = `${apiUrl}/${resource}?${params.ids.map(_id => stringify({_id})).join('&')}`\n        break\n      }\n      default:\n        throw new Error(`Unsupported fetch action type ${type}`)\n    }\n    return { url, options }\n  }\n\n  /**\n     * @param {Object} response HTTP response from fetch()\n     * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n     * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n     * @param {Object} params The data request params, depending on the type\n     * @returns {Object} Data response\n     */\n  const convertHTTPResponse = (response, type, resource, params) => {\n    console.log(type, resource, params);\n    const { json } = response\n    switch (type) {\n      case GET_LIST:\n      case GET_MANY:\n      case GET_MANY_REFERENCE:\n        return {\n          data: json.docs.map(d => (d.id = d._id) && delete d._id && d),\n          total: json.items.total\n        }\n      case CREATE:\n        params.data.id = params.data._id\n        delete params.data._id\n        return { data: params.data }\n      \n      /* modified seb */\n      case DELETE: \n        return { data: params }\n      default:\n        if(json) {\n          json.id = json._id\n          delete json._id\n          return { data: json }\n        } else {\n          return { data: {} }\n        }\n    }\n  }\n\n  /**\n     * @param {string} type Request type, e.g GET_LIST\n     * @param {string} resource Resource name, e.g. \"posts\"\n     * @param {Object} payload Request parameters. Depends on the request type\n     * @returns {Promise} the Promise for a data response\n     */\n  return (type, resource, params) => {\n    // json-server doesn't handle filters on UPDATE route, so we fallback to calling UPDATE n times instead\n    if (type === UPDATE_MANY) {\n      return Promise.all(\n        params.ids.map(id =>\n          httpClient(`${apiUrl}/${resource}/${id}`, {\n            method: 'PATCH',\n            body: JSON.stringify(params.data)\n          })\n        )\n      ).then(responses => ({\n        data: responses.map(response => response.json)\n      }))\n    }\n    // json-server doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n    if (type === DELETE_MANY) {\n      return Promise.all(\n        params.ids.map(id =>\n          httpClient(`${apiUrl}/${resource}/${id}`, {\n            method: 'DELETE'\n          })\n        )\n      ).then(responses => ({\n        data: responses.map(response => response.json)\n      }))\n    }\n    const { url, options } = convertDataRequestToHTTP(\n      type,\n      resource,\n      params\n    )\n    return httpClient(url, options).then(response =>\n      convertHTTPResponse(response, type, resource, params)\n    )\n  }\n}\n","import React from 'react';\nimport withGoogleMap from 'react-google-maps/lib/withGoogleMap';\nimport GoogleMap from 'react-google-maps/lib/components/GoogleMap';\nimport Marker from 'react-google-maps/lib/components/Marker';\nimport Circle from 'react-google-maps/lib/components/Circle';\n\n/* Create map with withGoogleMap HOC */\n/* https://github.com/tomchentw/react-google-maps */\n\nconst Map = withGoogleMap((props) => {\n  const {\n    position,\n    defaultZoom,\n    handleMarkerDragEnd,\n    onZoomChanged,\n    radius,\n    circleOptions,\n    shouldRecenterMap\n  } = props;\n\n  const circle = (radius !== -1) ?\n    <Circle\n      center={position}\n      radius={radius}\n      options={circleOptions}\n    /> : null;\n  const mapExtraProps = shouldRecenterMap ? { center: position }: {};\n  return (\n    <GoogleMap\n      onZoomChanged={onZoomChanged}\n      defaultZoom={defaultZoom}\n      defaultCenter={position}\n      {...mapExtraProps}\n    >\n\n      {/* Map marker */}\n      <Marker\n        draggable // Allow marker to drag\n        position={position}\n        onDragEnd={handleMarkerDragEnd}\n      />\n\n      {/* Circle */}\n      { circle }\n    </GoogleMap>\n  )\n});\n\nexport default Map;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { NumberInput } from 'react-admin';\nimport { FormDataConsumer, REDUX_FORM_NAME } from 'react-admin';\nimport { change } from 'redux-form';\n\n/**\n * REACT LOCATION PICKER\n */\n\nimport Map from './GoogleMap';\n\n/* Default configuration */\nconst DEFAULT_RADIUS = 1000;\nconst DEFAULT_ZOOM = 10;\n\n/* Circle options */\n// https://developers.google.com/maps/documentation/javascript/3.exp/reference#CircleOptions\nconst DEFAULT_CIRCLE_OPTIONS = {\n  fillColor: 'red',\n  fillOpacity: 0.2,\n  strokeColor: 'red',\n  strokeOpacity: 1,\n  strokeWeight: 1.2\n};\n\nclass LocationPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      position: props.defaultPosition,\n      shouldRecenterMap: false\n    };\n\n    this.handleMarkerDragEnd = this.handleMarkerDragEnd.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { defaultPosition } = nextProps;\n    if (\n      JSON.stringify(defaultPosition) !==\n      JSON.stringify(this.props.defaultPosition)\n    ) {\n      this.setState({ position: defaultPosition, shouldRecenterMap: true });\n    }\n  }\n\n  /**\n   * Handle Map marker position change\n   * @param { MouseEvent } mouseEvent // https://developers.google.com/maps/documentation/javascript/3.exp/reference#MouseEvent\n   */\n  handleMarkerDragEnd(mouseEvent) {\n    const { onChange } = this.props;\n    // Get latitude and longitude\n    const lat = mouseEvent.latLng.lat();\n    const lng = mouseEvent.latLng.lng();\n    const position = { lat, lng };\n    this.setState({ position, shouldRecenterMap: false });\n    onChange(position);\n  }\n\n  render() {\n    const {\n      zoom,\n      radius,\n      circleOptions,\n      containerElement,\n      mapElement\n    } = this.props;\n\n    const { position, shouldRecenterMap } = this.state;\n\n    return (\n      <Map\n        containerElement={containerElement}\n        mapElement={mapElement}\n        handleMarkerDragEnd={this.handleMarkerDragEnd}\n        position={position}\n        circleOptions={circleOptions}\n        radius={radius}\n        defaultZoom={zoom}\n        shouldRecenterMap={shouldRecenterMap}\n      />\n    );\n  }\n}\n\nLocationPicker.propTypes = {\n  containerElement: PropTypes.node.isRequired,\n  mapElement: PropTypes.node.isRequired,\n  onChange: PropTypes.func.isRequired,\n  defaultPosition: PropTypes.object.isRequired,\n  zoom: PropTypes.number,\n  radius: PropTypes.number,\n  circleOptions: PropTypes.object\n};\n\nLocationPicker.defaultProps = {\n  zoom: DEFAULT_ZOOM,\n  radius: DEFAULT_RADIUS,\n  circleOptions: DEFAULT_CIRCLE_OPTIONS\n};\n\n\n/* Default position */\nconst defaultPosition = {\n  lat: 27.9878,\n  lng: 86.9250\n};\n\nexport default class LocationInput extends Component {\n  render () {\n    return (\n      <FormDataConsumer>\n      {({ formData, dispatch, ...rest }) => (\n        <div>\n\n          <LocationPicker\n            containerElement={ <div style={ {height: '100%'} } /> }\n            mapElement={ <div style={ {height: '400px'} } /> }\n            defaultPosition={this.props.record.lat ? {lat: this.props.record.lat, lng: this.props.record.lon} : defaultPosition} \n            onChange={value => {\n                dispatch(change(REDUX_FORM_NAME, 'lat', value.lat))\n                dispatch(change(REDUX_FORM_NAME, 'lon', value.lng))\n            }}\n          />\n\n          <NumberInput source=\"lat\" label=\"latitude\"/>&nbsp;\n          <NumberInput source=\"lon\" label=\"longitude\"/>\n            \n        </div>\n      )}\n      </FormDataConsumer>\n    )\n  }\n}","import React from 'react';\nimport { \n  Admin, \n  DeleteButton, \n  Resource, \n  ListGuesser, \n  List, \n  Datagrid, \n  Edit, \n  Create, \n  SimpleForm, \n  TextInput, \n  TextField, \n  Toolbar, \n  FileInput, \n  FileField,\n  ReferenceInput,\n  SelectInput   \n} from 'react-admin';\n\nimport { dataProvider } from '../helpers/dataProvider.js';\n\nimport LocationInput from './LocationInput.js';\n\nconst TranslationForm = \n    <SimpleForm>\n        <TextInput source=\"key\" />\n        <TextInput source=\"content_en\" />\n        <TextInput source=\"content_no\" />\n    </SimpleForm>\nconst TranslationEdit = props => <Edit {...props}>{TranslationForm}</Edit>;\nconst TranslationCreate = props => <Create {...props}>{TranslationForm}</Create>;\n\nconst PlaceList = props =>\n  <List {...props}>\n    <Datagrid rowClick=\"edit\">\n        <TextField source=\"name\" />\n    </Datagrid>\n  </List>;\n\nconst PlaceForm = \n    <SimpleForm>\n        <TextInput source=\"name\" />\n        \n        <LocationInput/>\n        \n        <ReferenceInput label=\"audio 1\" source=\"audio1\" reference=\"file\">\n          <SelectInput optionText=\"filename\" />\n        </ReferenceInput>\n\n        <ReferenceInput label=\"audio 2\" source=\"audio2\" reference=\"file\">\n          <SelectInput optionText=\"filename\" />\n        </ReferenceInput>\n\n        <ReferenceInput label=\"audio 3\" source=\"audio3\" reference=\"file\">\n          <SelectInput optionText=\"filename\" />\n        </ReferenceInput>\n        \n    </SimpleForm>\n\nconst PlaceEdit = props =>   \n    <Edit {...props}>\n      {PlaceForm}\n    </Edit>\n  \nconst PlaceCreate = props => <Create {...props}>{PlaceForm}</Create>;\n\nconst FileList = props =>\n  <List {...props} bulkActionButtons={false}>\n    <Datagrid rowClick=\"edit\">\n        <TextField source=\"filename\" />\n    </Datagrid>\n  </List>;\n\nconst FileToolbar = props => \n  <Toolbar {...props}>\n    <DeleteButton undoable={false} record={props.data} />\n  </Toolbar>\n          \nconst FileEdit = props => \n  <Edit {...props} >\n    <SimpleForm toolbar={<FileToolbar />}>\n      <TextField source=\"filename\" />\n      <TextField source=\"url\" />\n    </SimpleForm>\n  </Edit>;\n        \nconst FileCreate = props => \n  <Create {...props}>\n    <SimpleForm>\n      <FileInput source=\"files\" multiple={false}>\n        <FileField source=\"filename\" title=\"title\" />\n      </FileInput>\n    </SimpleForm>\n  </Create>\n\nconst App = () => \n  <Admin dataProvider={dataProvider}>\n    <Resource name=\"translation\" list={ListGuesser} edit={TranslationEdit} create={TranslationCreate}/>\n    <Resource name=\"place\" list={PlaceList} edit={PlaceEdit} create={PlaceCreate}/>\n    <Resource name=\"file\" list={FileList} edit={FileEdit} create={FileCreate}/>\n  </Admin>\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}